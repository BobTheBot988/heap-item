name: Build wheels

on:
  push:
    tags:
      - "v*" # Run on version tags
  workflow_dispatch:

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12" # runner Python, not target

      # Only runs when the OS is Ubuntu
      - name: Enable QEMU for cross-arch Docker
        if: matrix.os == 'ubuntu-latest'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Install cibuildwheel
        run: python -m pip install -U pip cibuildwheel

      - name: Build wheels
        env:
          CIBW_CONTAINER_ENGINE: docker
          CIBW_BUILD: "cp*-*" # build for all CPython versions
          CIBW_SKIP: "pp*" # skip PyPy
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build sdist
        run: |
          python -m pip install -U pip build
          python -m build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    needs: [build_wheels, sdist]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
